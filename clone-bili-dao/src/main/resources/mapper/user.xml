<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.ory//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.UserDao">
    <insert id="addUser" parameterType="domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(
                  phone,email,password,salt,createTime
        ) values (
                  #{phone},#{email},#{password},#{salt},#{createTime}
        )
    </insert>
    <insert id="addUserInfo" parameterType="domain.UserInfo">
        insert into t_user_info(
            userId,nick,avatar,salt,createTime
        ) values (
            #{userId},#{nick},#{password},#{avatar},#{createTime}
        )
    </insert>
    <insert id="addRefreshToken">
        insert into t_refresh_token(
            refreshToken,userId,createTime
        ) values (
            #{refreshToken}, #{userId}, #{createTime}
        )
    </insert>
    <update id="updateUserInfo">
        update t_user_info
        set
            <if test="nick != null and nick != '' ">
                nick = #{nick},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            updateTime = #{updateTime}
        where userId = #{userId}
    </update>
    <update id="updateUser">
        update
            t_user
        set
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            updateTime = #{updateTime}
    </update>
    <delete id="deleteRefreshToken">
        delete from t_refresh_token where refreshToken = #{refreshToken} and userId = #{userId}
    </delete>
    <select id="getUserByPhone" parameterType="java.lang.String" resultType="domain.User">
        select * from t_user where phone = #{phone}
    </select>
    <select id="getUserById" parameterType="java.lang.Long" resultType="domain.User">
        select * from t_user where id = #{id}
    </select>
    <select id="getUserInfoByUserId" parameterType="java.lang.Long" resultType="domain.UserInfo">
        select * from t_user_info where userId = #{userId}
    </select>
    <select id="getUserInfoByUserIds" resultType="domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            1=1
            <if test="userIdList != null and userIdList.size > 0">
                and userId in
                <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
    </select>
    <select id="pageCountUserInfo" resultType="java.lang.Integer" parameterType="java.util.Map">
        select
            count(1)
        from
            t_user_info
        where
            1=1
            <if test="nick != null and nick != ''">
                and nick like '%${nick}%'
            </if>
    </select>
    <select id="pageListUserInfos" resultType="domain.UserInfo" parameterType="java.util.Map">
        select
            *
        from
            t_user_info
        where
            1=1
            <if test="nick != null and nick != ''">
                and nick like '%${nick}%'
            </if>
        order by id desc
        limit #{start}, #{limit}
    </select>
    <select id="getRefreshTokenDetail" resultType="domain.RefreshTokenDetail" parameterType="java.lang.String">
        select * from t_refresh_token where refreshIoken = #{refreshIoken}
    </select>
    <select id="batchGetUserInfoByUserIds" resultType="domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            userId in
        <foreach collection="userIdList" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </select>
</mapper>